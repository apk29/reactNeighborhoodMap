{"version":3,"sources":["img/fourSquare.png","components/List.js","components/Filter.js","components/Error.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","List","openMarker","locationName","_this","props","markers","map","marker","title","window","google","maps","event","trigger","_this2","this","react_default","a","createElement","className","places","place","style","listStyleType","textAlign","key","venue","id","onClick","name","width","height","flex","src","fourSquare","alt","Component","FilterList","styles","fontSize","marginTop","display","render","placeholder","type","value","query","onChange","updateQuery","target","clearFilter","Error","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasError","children","App","renderMap","loadScript","initMap","getData","parameters","client_id","client_secret","near","v","limit","axios","get","URLSearchParams","then","response","setState","data","groups","items","showVenues","catch","error","console","log","url","index","document","getElementsByTagName","script","async","defer","parentNode","insertBefore","alert","Map","getElementById","center","lat","lng","zoom","infowindow","InfoWindow","forEach","contentString","concat","location","address","city","Marker","position","animation","Animation","DROP","setContent","setAnimation","BOUNCE","setTimeout","open","push","addListener","filterVenues","hiddenMarkers","setVisible","match","RegExp","escapeRegExp","filter","test","every","aria-label","clickLocation","_this$state","components_Error","Filter","venues","b","components_List","Boolean","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83f1e024.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fourSquare.683815f5.png\";","import React, { Component } from 'react';\r\nimport './List';\r\nimport fourSquare from '../img/fourSquare.png'\r\n\r\nclass List extends Component {\r\n  \r\n    openMarker = locationName => {\r\n        // eslint-disable-next-line\r\n        this.props.markers.map(marker => {\r\n          if (marker.title === locationName) {\r\n            window.google.maps.event.trigger(marker, \"click\")\r\n          }\r\n        })\r\n      }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"list\">\r\n            <ul>\r\n              {this.props.places.map(place => \r\n                <li style={{ listStyleType: \"none\",\r\n                    textAlign: 'center' }}\r\n                    key={place.venue.id}\r\n                    onClick={() => {\r\n                    this.openMarker(place.venue.name);\r\n                  }}\r\n                  \r\n                >{ place.venue.name }\r\n                </li>)}\r\n                </ul>\r\n                <div className=\"fourSquareImg\">\r\n              <img style={{width: 135, height: 90,\r\n                flex: 1\r\n                }}\r\n                src={fourSquare}\r\n                alt=\"Powered by Foursquare\"\r\n                title='Powered by Foursquare'\r\n              />\r\n            </div>\r\n             </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default List;","import React, { Component } from 'react'\r\nimport '../App.css'\r\n\r\nclass FilterList extends Component {\r\n    styles = {\r\n        width: \"100%\",  //sets witdth of filter box\r\n        fontSize: \"1.2em\",\r\n        marginTop: \"2%\",\r\n        display: \"flex\"\r\n    };\r\nrender = () => {\r\n    \r\n    return (\r\n        <form className=\"filterList\">\r\n            <input \r\n                style = { this.styles }  //sets fontsize of filter box\r\n                placeholder=\"Type restaurant name here\"\r\n                type=\"text\"\r\n                value={this.props.query}\r\n                onChange={event => this.props.updateQuery(event.target.value)}\r\n                />\r\n            <button className=\"btn btn-second btn-sm\" \r\n                style= {{ marginTop: \"5%\" }}\r\n                onClick= { () => this.props.clearFilter() }  >Reset Filter\r\n            </button>\r\n        </form>\r\n           )\r\n        }\r\n    }\r\nexport default FilterList;","import React, { Component } from 'react';\r\n\r\nclass Error extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n    \r\n    render() { \r\n        if (this.state.hasError) {\r\n        return ( <h2>You have an error!</h2> );\r\n    }\r\n    return this.props.children;\r\n}\r\n}\r\nexport default Error;","import React, {\tComponent } from 'react';\r\nimport './App.css';\r\nimport escapeRegExp from 'escape-string-regexp';\r\nimport axios from 'axios';\r\nimport List from './components/List'\r\nimport FilterList from './components/Filter';\r\nimport Error from './components/Error'\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tplaces: [],\r\n\t\t\tmarkers: [],\r\n\t\t\tshowVenues: [],\r\n\t\t\tquery: '',\r\n\t\t\thiddenMarkers: []\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.getData();\r\n\t}\r\n\trenderMap = () => {\r\n\t\tthis.loadScript(\"https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyAPSXmNZXCu_tHV-TYQNtwWH4t6jODM_PU&callback=initMap\");\r\n\t\twindow.initMap = this.initMap\r\n\t}\r\n\tgetData = () => {\r\n\t\tconst client_id = \"VV3ZGLVA5IELWBM2U3RPAXXZTA40AJJKLFIPHAOUESD1F2IB\";\r\n\t\tconst client_secret = \"SQNM5FZAOEVCCVG1W2TUDUGVW51G2DOP1TYFC535RWBA10PT\";\r\n\t\tconst fourSquareUrl = \"https://api.foursquare.com/v2/venues/explore?\"\r\n\t\tconst parameters = {\r\n\t\t\tclient_id: client_id,\r\n\t\t\tclient_secret: client_secret,\r\n\t\t\tquery: \"food\",\r\n\t\t\tnear: \"Oakland\",\r\n\t\t\tv: \"20181030\",\r\n\t\t\tlimit: 28\r\n\t\t}\r\n\t\taxios.get(fourSquareUrl + new URLSearchParams(parameters))\r\n\t\t\t.then(response => {\r\n\t\t\t\tthis.setState({\r\n          \tplaces: response.data.response.groups[0].items,\r\n          \t// makes list re-appear when filter is erased\r\n          \tshowVenues: response.data.response.groups[0].items\r\n\t\t\t\t}, this.renderMap())\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(\"Error \" + error)\r\n\t\t\t})\r\n\t}\r\n\tloadScript = (url) => {\r\n\t\tlet index = window.document.getElementsByTagName(\"script\")[0];\r\n\t\tlet script = window.document.createElement(\"script\");\r\n\t\tscript.src = url;\r\n\t\tscript.async = true;\r\n\t\tscript.defer = true;\r\n\t\tindex.parentNode.insertBefore(script, index);\r\n\t\tscript.error = () => {\r\n\t\t\talert(\"Error occured, check URL\")\r\n\t\t}\r\n\t}\r\n\tinitMap = () => {\r\n\t\t//Create map\r\n\t\tlet map = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n\t\t\tcenter: {\r\n\t\t\t\tlat: 37.813331,\r\n\t\t\t\tlng: -122.261801},\r\n\t\t\t\tzoom: 13\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\r\n\t\t//Create an infoWindow, this outside of function below to keep only \r\n\t\t//one infoWindow Open\r\n\t\tlet infowindow = new window.google.maps.InfoWindow();\r\n\t\t//this displays a dynamic marker & information in marker\r\n\t\tthis.state.places.forEach((place) => {\r\n\t\t\tconst contentString = `${place.venue.name},<br>\r\n                                 ${place.venue.location.address},<br>\r\n\t\t\t\t\t\t\t     ${place.venue.location.city}`\r\n\t\t\t//Creat a marker\r\n\t\t\tconst marker = new window.google.maps.Marker({\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tlat: place.venue.location.lat,\r\n\t\t\t\t\tlng: place.venue.location.lng\r\n\t\t\t\t},\r\n\t\t\t\tmap: map,\r\n\t\t\t\tanimation: window.google.maps.Animation.DROP,\r\n\t\t\t\ttitle: place.venue.name\r\n\t\t\t});\r\n\t\t\tthis.state.markers.push(marker)\r\n\r\n\t\t\tfunction animationEffect() {\r\n\t\t\t\tmarker.setAnimation(window.google.maps.Animation.BOUNCE)\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tmarker.setAnimation(null)\r\n\t\t\t\t}, 1400)\r\n\t\t\t}\r\n\r\n\t\t\tfunction openMarker() {\r\n\t\t\t\t// Setting the content of the InfoWindow\r\n\t\t\t\tinfowindow.setContent(contentString)\r\n\t\t\t\tanimationEffect()\r\n\t\t\t\t//Open infoWindow\r\n\t\t\t\tinfowindow.open(map, marker)\r\n\t\t\t}\r\n\t\t\t//Open infoWindow by click\r\n\t\t\tmarker.addListener('click', function () {\r\n\t\t\t\topenMarker();\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\tupdateQuery = query => {\r\n\t\tthis.setState({\r\n\t\t\tquery\r\n\t\t})\r\n\t\tthis.state.markers.map(marker => marker.setVisible(true))\r\n\t\tlet filterVenues\r\n\t\tlet hiddenMarkers\r\n\t\tif (query) {\r\n\t\t\tconst match = new RegExp(escapeRegExp(query), \"i\")\r\n\t\t\tfilterVenues = this.state.places.filter(place =>\r\n\t\t\t\tmatch.test(place.venue.name))\r\n\t\t\tthis.setState({\r\n\t\t\t\tplaces: filterVenues\r\n\t\t\t})\r\n\t\t\thiddenMarkers = this.state.markers.filter(marker =>\r\n\t\t\t\tfilterVenues.every(place => place.venue.name !== marker.title))\r\n\t\t\thiddenMarkers.forEach(marker => marker.setVisible(false))\r\n\t\t\tthis.setState({\r\n\t\t\t\thiddenMarkers\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tplaces: this.state.showVenues\r\n\t\t\t})\r\n\t\t\tthis.state.markers.forEach(marker => marker.setVisible(true))\r\n\t\t}\r\n\t}\r\n// clear filter function \r\nclearFilter = () => {\r\n      \r\n    this.setState({\r\n      query: '',\r\n    \r\n    })\r\n  }\r\n  render() { \r\n\tif(this.state.hasError) {\r\n\t\treturn <div aria-label=\"Error message\">Error!</div>\r\n\t} else {\r\n    \r\n\tconst { clickLocation } = this;\r\n\tconst { places, markers, showVenues, query } \r\n\t        = this.state\r\n\t\r\n\treturn (\r\n\t\t<main>\r\n\t\t   <Error>\r\n\t\t\t  <div className=\"App-header\" aria-label=\"Header\">\r\n\t\t\t  \tOakland Restaurants\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"App\" >\r\n\t\t\t\t <div id=\"map\" aria-label=\"Map\" \r\n\t\t\t\t ></div>\r\n\t\t\t\t <div className=\"sideBar\">\r\n\t\t\t\t\t<div className=\"FilterList\">\r\n\t\t\t\t\t   <FilterList aria-label=\"Search Bar\"\r\n\t\t\t\t\t   //passes the items to the FilterList Component\r\n\t\t\t\t\t   venues={ showVenues } \r\n\t\t\t\t\t   markers={ markers } \r\n\t\t\t\t\t   query={ query }     \t\r\n\t\t\t\t\t   updateQuery= {b => this.updateQuery(b)}\r\n\t\t\t\t\t   clickLocation = { clickLocation }\r\n\t\t\t\t\t   clearFilter = { this.clearFilter }\r\n\t\t\t\t\t   />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"List\" aria-label=\"Menu Container\">\r\n\t\t\t\t\t   <List //passes the items to the List Component\r\n\t\t\t\t\t\t  places= { places }\r\n\t\t\t\t\t\t  markers = { markers } />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t </div>\r\n\t\t\t  </div>\r\n\t\t   </Error>\r\n\t\t</main>\r\n\t\t);\r\n\t\t}\r\n\t\t};\r\n\t\t}\r\n\r\n export default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}